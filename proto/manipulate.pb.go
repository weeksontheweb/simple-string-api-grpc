// Code generated by protoc-gen-go. DO NOT EDIT.
// source: manipulate.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	manipulate.proto

It has these top-level messages:
	Request
	Response
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	ToManipulate string `protobuf:"bytes,1,opt,name=toManipulate" json:"toManipulate,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetToManipulate() string {
	if m != nil {
		return m.ToManipulate
	}
	return ""
}

type Response struct {
	Manipulated string `protobuf:"bytes,1,opt,name=manipulated" json:"manipulated,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetManipulated() string {
	if m != nil {
		return m.Manipulated
	}
	return ""
}

func init() {
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ManipulateService service

type ManipulateServiceClient interface {
	Reverse(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	NextInASCII(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	PreviousInASCII(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type manipulateServiceClient struct {
	cc *grpc.ClientConn
}

func NewManipulateServiceClient(cc *grpc.ClientConn) ManipulateServiceClient {
	return &manipulateServiceClient{cc}
}

func (c *manipulateServiceClient) Reverse(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.ManipulateService/Reverse", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manipulateServiceClient) NextInASCII(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.ManipulateService/NextInASCII", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manipulateServiceClient) PreviousInASCII(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.ManipulateService/PreviousInASCII", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ManipulateService service

type ManipulateServiceServer interface {
	Reverse(context.Context, *Request) (*Response, error)
	NextInASCII(context.Context, *Request) (*Response, error)
	PreviousInASCII(context.Context, *Request) (*Response, error)
}

func RegisterManipulateServiceServer(s *grpc.Server, srv ManipulateServiceServer) {
	s.RegisterService(&_ManipulateService_serviceDesc, srv)
}

func _ManipulateService_Reverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManipulateServiceServer).Reverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ManipulateService/Reverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManipulateServiceServer).Reverse(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManipulateService_NextInASCII_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManipulateServiceServer).NextInASCII(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ManipulateService/NextInASCII",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManipulateServiceServer).NextInASCII(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManipulateService_PreviousInASCII_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManipulateServiceServer).PreviousInASCII(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ManipulateService/PreviousInASCII",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManipulateServiceServer).PreviousInASCII(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManipulateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ManipulateService",
	HandlerType: (*ManipulateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reverse",
			Handler:    _ManipulateService_Reverse_Handler,
		},
		{
			MethodName: "NextInASCII",
			Handler:    _ManipulateService_NextInASCII_Handler,
		},
		{
			MethodName: "PreviousInASCII",
			Handler:    _ManipulateService_PreviousInASCII_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manipulate.proto",
}

func init() { proto1.RegisterFile("manipulate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x4d, 0xcc, 0xcb,
	0x2c, 0x28, 0xcd, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53,
	0x4a, 0xba, 0x5c, 0xec, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x4a, 0x5c, 0x3c, 0x25,
	0xf9, 0xbe, 0x70, 0x75, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x28, 0x62, 0x4a, 0x3a, 0x5c,
	0x1c, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x0a, 0x5c, 0xdc, 0x08, 0x53, 0x53,
	0xa0, 0xca, 0x91, 0x85, 0x8c, 0x16, 0x33, 0x72, 0x09, 0x22, 0x34, 0x07, 0xa7, 0x16, 0x95, 0x65,
	0x26, 0xa7, 0x0a, 0x69, 0x81, 0xac, 0x2c, 0x4b, 0x2d, 0x2a, 0x4e, 0x15, 0xe2, 0x83, 0x38, 0x46,
	0x0f, 0xea, 0x04, 0x29, 0x7e, 0x38, 0x1f, 0x6a, 0x87, 0x1e, 0x17, 0xb7, 0x5f, 0x6a, 0x45, 0x89,
	0x67, 0x9e, 0x63, 0xb0, 0xb3, 0xa7, 0x27, 0x61, 0xf5, 0x46, 0x5c, 0xfc, 0x01, 0x45, 0xa9, 0x65,
	0x99, 0xf9, 0xa5, 0xc5, 0xc4, 0xea, 0x49, 0x62, 0x03, 0xf3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x58, 0x2c, 0x51, 0xcb, 0x24, 0x01, 0x00, 0x00,
}
